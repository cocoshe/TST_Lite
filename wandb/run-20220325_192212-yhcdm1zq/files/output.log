
| epoch   1 |    10/   90 batches | lr 0.001000 | 147.16 ms | loss 0.16620
| epoch   1 |    20/   90 batches | lr 0.001000 | 128.47 ms | loss 0.14719
| epoch   1 |    30/   90 batches | lr 0.001000 | 115.27 ms | loss 0.09481
| epoch   1 |    40/   90 batches | lr 0.001000 | 116.59 ms | loss 0.08763
| epoch   1 |    50/   90 batches | lr 0.001000 | 115.53 ms | loss 0.07011
| epoch   1 |    60/   90 batches | lr 0.001000 | 120.70 ms | loss 0.05641
| epoch   1 |    70/   90 batches | lr 0.001000 | 116.36 ms | loss 0.08612
| epoch   1 |    80/   90 batches | lr 0.001000 | 119.97 ms | loss 0.07658
| epoch   1 |    90/   90 batches | lr 0.001000 | 183.06 ms | loss 0.10666
data_source shape: torch.Size([5784, 2, 20, 36])
output shape: torch.Size([20, 1, 36])
output[[0]].shape: torch.Size([1, 1, 36])
output[:-1].shape: torch.Size([19, 1, 36])
truth shape: torch.Size([5803, 36])
test_result shape: torch.Size([5803, 36])
output truth shape: (5803, 36)
output test_result shape: (5803, 36)
test_result[0].shape, type (36,) float64
test_result.shape, type (5803, 36) float64
loss shape:  (5803, 36)
Traceback (most recent call last):
  File "train.py", line 150, in <module>
    main(args)
  File "train.py", line 115, in main
    val_loss = plot_and_loss(model, val_data, epoch, criterion, input_window, scaler, args.dim, labels)
  File "D:\PythonProject\Time_series_anomaly_detection\utils\plot_and_loss.py", line 104, in plot_and_loss
    plt.savefig('graph/transformer-epoch%d_%s_%s.png' % (epoch, i + 1, model_type))
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\pyplot.py", line 958, in savefig
    res = fig.savefig(*args, **kwargs)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\figure.py", line 3019, in savefig
    self.canvas.print_figure(fname, **kwargs)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\backends\backend_qtagg.py", line 85, in print_figure
    super().print_figure(*args, **kwargs)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\backend_bases.py", line 2325, in print_figure
    **kwargs)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\backend_bases.py", line 1648, in wrapper
    return func(*args, **kwargs)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\_api\deprecation.py", line 412, in wrapper
    return func(*inner_args, **inner_kwargs)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\backends\backend_agg.py", line 540, in print_png
    FigureCanvasAgg.draw(self)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\backends\backend_agg.py", line 436, in draw
    self.figure.draw(self.renderer)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\artist.py", line 73, in draw_wrapper
    result = draw(artist, renderer, *args, **kwargs)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\artist.py", line 50, in draw_wrapper
    return draw(artist, renderer)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\figure.py", line 2811, in draw
    renderer, self, artists, self.suppressComposite)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\image.py", line 132, in _draw_list_compositing_images
    a.draw(renderer)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\artist.py", line 50, in draw_wrapper
    return draw(artist, renderer)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\axes\_base.py", line 3083, in draw
    renderer, self, artists, self.figure.suppressComposite)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\image.py", line 132, in _draw_list_compositing_images
    a.draw(renderer)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\artist.py", line 50, in draw_wrapper
    return draw(artist, renderer)
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\lines.py", line 776, in draw
    renderer.draw_path(gc, tpath, affine.frozen())
  File "D:\miniconda\envs\pytorch\lib\site-packages\matplotlib\backends\backend_agg.py", line 170, in draw_path
    self._renderer.draw_path(gc, path, transform, rgbFace)
MemoryError: In draw_path: Out of memory